name: envelope_educ_container

services:
  auth_service_db:
    container_name: auth_service_db
    hostname: auth_service_db
    image: postgres:latest
    
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
      
    volumes:
      - auth_service_volume:/var/lib/postgresql/data/pgdata
    
    networks:
      - auth_service_network
  
  auth_service:
    container_name: auth_service
    hostname: auth_service
    
    build: 
      context: src/
      dockerfile: services/AuthService/Dockerfile
    
    ports: 
      - '8080:8080'
    
    environment:
      - ConnectionStrings__UsersDataBase=Host=auth_service_db;Port=5432;Database=usersDataBase;Username=postgres;Password=postgres;
    
    networks:
      - services_network
      - auth_service_network
    
    depends_on:
      - auth_service_db
  
  task_service_db:
    container_name: task_service_db
    hostname: task_service_db
    image: postgres:latest

    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata

    volumes:
      - task_service_volume:/var/lib/postgresql/data/pgdata

    networks:
      - task_service_network
  
  task_service:
    container_name: task_service
    hostname: task_service

    build:
      context: src/
      dockerfile: services/TaskService/Dockerfile
    
    environment:
      - ConnectionStrings__TaskEventStore=Host=task_service_db;Port=5432;Database=taskEventStore;Username=postgres;Password=postgres;
      - ConnectionStrings__TaskProjectionDatabase=Host=task_service_db;Port=5432;Database=taskProjectionDb;Username=postgres;Password=postgres;

    ports:
      - "8081:8081"

    networks:
      - task_service_network
      - services_network

    depends_on:
      - task_service_db
    
  courses_service_db:
    container_name: courses_service_db
    hostname: courses_service_db
    image: postgres:latest

    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata

    volumes:
      - courses_service_volume:/var/lib/postgresql/data/pgdata

    networks:
      - courses_service_network

  course_service:
    container_name: courses_service
    hostname: courses_service

    build:
      context: src/
      dockerfile: services/CoursesService/Dockerfile

    ports:
      - '8082:8082'
    
    environment:
      - ConnectionStrings__CourseDataBase=Host=courses_service_db;Port=5432;Database=courseDataBase;Username=postgres;Password=postgres;

    networks:
      - courses_service_network
      - services_network

    depends_on:
      - courses_service_db
  
  rabbit_mq:
    image: rabbitmq:3.10.7-management
    container_name: rabbit_mq
    hostname: rabbit_mq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    networks:
      - services_network
    ports:
      - "15672:15672"
      - "5672:5672"
    expose:
     - 15672
     - 5672
    

networks:
  services_network:
  auth_service_network:
  courses_service_network:
  task_service_network:

volumes:
  auth_service_volume:
  courses_service_volume:
  task_service_volume: